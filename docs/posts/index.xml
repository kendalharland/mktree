<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on mktree</title>
    <link>/mktree/posts/</link>
    <description>Recent content in Posts on mktree</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 Jul 2022 16:06:53 +0000</lastBuildDate><atom:link href="/mktree/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Changelog</title>
      <link>/mktree/posts/changelog/</link>
      <pubDate>Wed, 13 Jul 2022 16:06:53 +0000</pubDate>
      
      <guid>/mktree/posts/changelog/</guid>
      <description>%(content release-notes)</description>
    </item>
    
    <item>
      <title>Language</title>
      <link>/mktree/posts/language/</link>
      <pubDate>Tue, 12 Jul 2022 16:06:53 +0000</pubDate>
      
      <guid>/mktree/posts/language/</guid>
      <description>Contents Introduction Preprocessing Variables Language Strings Numbers Attributes Filesystem entities Comments Grammar Introduction This page describes the design and behavior of the language.
Preprocessing Variables Variables are alphabetic literals surrounded by %( and ). They are not interpreted. Instead they are replaced in the source using string substitution. For more information about variables see the Variables section of the reference.
Language mktree uses a basic S-expression (&amp;ldquo;sexpr&amp;rdquo;) syntax to describe a tree of filesystem entities to create.</description>
    </item>
    
    <item>
      <title>Reference</title>
      <link>/mktree/posts/reference/</link>
      <pubDate>Tue, 12 Jul 2022 16:06:53 +0000</pubDate>
      
      <guid>/mktree/posts/reference/</guid>
      <description>Contents The command-line interface Variables Builtin Variables root_dir API Reference file @contents @perms @template dir @perms Template Files Builtin functions FileExists FileContents Now User The command-line interface %(content cli-usage) Variables Variables are given as command-line arguments and may appear anywhere in the source file. They are surrounded by %( and ) and replaced in the source using string substitution during a preprocessing step. This happens before the input source is interpreted, meaning variables are not part of the mktree grammar.</description>
    </item>
    
  </channel>
</rss>
