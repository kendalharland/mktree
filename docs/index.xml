<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>≫ mktree on mktree</title>
    <link>/mktree/</link>
    <description>Recent content in ≫ mktree on mktree</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Jul 2022 16:06:53 +0000</lastBuildDate><atom:link href="/mktree/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Changelog</title>
      <link>/mktree/posts/changelog/</link>
      <pubDate>Wed, 13 Jul 2022 16:06:53 +0000</pubDate>
      
      <guid>/mktree/posts/changelog/</guid>
      <description>%(snippet release-notes)</description>
    </item>
    
    <item>
      <title>Language</title>
      <link>/mktree/posts/language/</link>
      <pubDate>Tue, 12 Jul 2022 16:06:53 +0000</pubDate>
      
      <guid>/mktree/posts/language/</guid>
      <description>Contents Introduction Language Strings Numbers Attributes Filesystem entities Comments Variables Grammar Introduction This page describes the design and behavior of the language.
Language mktree uses a basic S-expression (&amp;ldquo;sexpr&amp;rdquo;) syntax to describe a tree of filesystem entities to create. The types are:
Strings Numbers (unsigned integers) Attributes Filesystem entities Strings Strings are enclosed in double quotes. There are no supported escape sequences.
&amp;quot;This is a string.&amp;quot; Numbers Numbers are parsed as unsigned integers having no bit-width.</description>
    </item>
    
    <item>
      <title>Reference</title>
      <link>/mktree/posts/reference/</link>
      <pubDate>Tue, 12 Jul 2022 16:06:53 +0000</pubDate>
      
      <guid>/mktree/posts/reference/</guid>
      <description>Contents The command-line interface Concepts .tree files Paths Variables Builtin Variables root_dir Filesystem entities file @contents @perms @template dir @perms The command-line interface %(snippet cli-usage) Concepts .tree files Paths Variables Variables may appear anywhere in a *.tree file and must be surrounded by %( and ). Variables are inserted using simple string substitution by a preprocessing step before code is interpreted. This means that variables are not part of the mktree grammar.</description>
    </item>
    
  </channel>
</rss>
